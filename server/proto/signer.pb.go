// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/signer.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_proto_signer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_proto_signer_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type SignRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	DownloadUrl   string                 `protobuf:"bytes,2,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`
	UploadUrl     string                 `protobuf:"bytes,3,opt,name=upload_url,json=uploadUrl,proto3" json:"upload_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignRequest) Reset() {
	*x = SignRequest{}
	mi := &file_proto_signer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRequest) ProtoMessage() {}

func (x *SignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRequest.ProtoReflect.Descriptor instead.
func (*SignRequest) Descriptor() ([]byte, []int) {
	return file_proto_signer_proto_rawDescGZIP(), []int{1}
}

func (x *SignRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *SignRequest) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

func (x *SignRequest) GetUploadUrl() string {
	if x != nil {
		return x.UploadUrl
	}
	return ""
}

var File_proto_signer_proto protoreflect.FileDescriptor

const file_proto_signer_proto_rawDesc = "" +
	"\n" +
	"\x12proto/signer.proto\x12\x06signer\"/\n" +
	"\x10SubscribeRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\"h\n" +
	"\vSignRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12!\n" +
	"\fdownload_url\x18\x02 \x01(\tR\vdownloadUrl\x12\x1d\n" +
	"\n" +
	"upload_url\x18\x03 \x01(\tR\tuploadUrl2M\n" +
	"\rSignerService\x12<\n" +
	"\tSubscribe\x12\x18.signer.SubscribeRequest\x1a\x13.signer.SignRequest0\x01B)Z'github.com/YHVCorp/signer-service/protob\x06proto3"

var (
	file_proto_signer_proto_rawDescOnce sync.Once
	file_proto_signer_proto_rawDescData []byte
)

func file_proto_signer_proto_rawDescGZIP() []byte {
	file_proto_signer_proto_rawDescOnce.Do(func() {
		file_proto_signer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_signer_proto_rawDesc), len(file_proto_signer_proto_rawDesc)))
	})
	return file_proto_signer_proto_rawDescData
}

var file_proto_signer_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_signer_proto_goTypes = []any{
	(*SubscribeRequest)(nil), // 0: signer.SubscribeRequest
	(*SignRequest)(nil),      // 1: signer.SignRequest
}
var file_proto_signer_proto_depIdxs = []int32{
	0, // 0: signer.SignerService.Subscribe:input_type -> signer.SubscribeRequest
	1, // 1: signer.SignerService.Subscribe:output_type -> signer.SignRequest
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_signer_proto_init() }
func file_proto_signer_proto_init() {
	if File_proto_signer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_signer_proto_rawDesc), len(file_proto_signer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_signer_proto_goTypes,
		DependencyIndexes: file_proto_signer_proto_depIdxs,
		MessageInfos:      file_proto_signer_proto_msgTypes,
	}.Build()
	File_proto_signer_proto = out.File
	file_proto_signer_proto_goTypes = nil
	file_proto_signer_proto_depIdxs = nil
}
